{"version":3,"file":"faktorfi-list-program.esm.js","sources":["../src/account/list.ts","../src/account/element.ts","../src/account/index.ts","../src/instruction/createList.ts","../src/instruction/deleteList.ts","../src/instruction/pushElement.ts","../src/instruction/popElement.ts","../src/instruction/index.ts","../src/idl.ts","../src/index.ts"],"sourcesContent":["import { Gateway, findPDA } from \"@faktorfi/utils\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport { ListProgram } from \"../idl\";\n\nconst SEED_LIST = Buffer.from(\"lst\");\n\nexport class ListGateway extends Gateway<\n  ListProgram,\n  ListProgram[\"accounts\"][1]\n> {\n  public async pda(owner: PublicKey, namespace: PublicKey) {\n    return await findPDA(\n      [SEED_LIST, owner.toBuffer(), namespace.toBuffer()],\n      this.program.programId\n    );\n  }\n}\n","import { Gateway, findPDA } from \"@faktorfi/utils\";\nimport { BN } from \"@project-serum/anchor\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport { ListProgram } from \"../idl\";\n\nconst SEED_ELEMENT = Buffer.from(\"elm\");\n\nexport class ElementGateway extends Gateway<\n  ListProgram,\n  ListProgram[\"accounts\"][0]\n> {\n  public async pda(index: PublicKey, position: BN) {\n    return await findPDA(\n      [SEED_ELEMENT, index.toBuffer(), position.toArrayLike(Buffer, \"be\", 16)],\n      this.program.programId\n    );\n  }\n}\n","import { Program } from \"@project-serum/anchor\";\nimport { ListProgram } from \"../idl\";\n\nimport { ListGateway } from \"./list\";\nimport { ElementGateway } from \"./element\";\n\nexport class Account {\n  public element: ElementGateway;\n  public list: ListGateway;\n\n  constructor(program: Program<ListProgram>) {\n    this.element = new ElementGateway(program, program.account.element);\n    this.list = new ListGateway(program, program.account.list);\n  }\n}\n","import { Program } from \"@project-serum/anchor\";\nimport {\n  PublicKey,\n  SystemProgram,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport { ListProgram } from \"../idl\";\nimport { Account } from \"../account\";\n\nexport type CreateListArgs = {\n  namespace: PublicKey;\n  owner: PublicKey;\n  payer: PublicKey;\n};\n\nexport class CreateList {\n  private account: Account;\n  private program: Program<ListProgram>;\n\n  constructor(account: Account, program: Program<ListProgram>) {\n    this.account = account;\n    this.program = program;\n  }\n\n  public async createList({\n    namespace,\n    owner,\n    payer,\n  }: CreateListArgs): Promise<TransactionInstruction> {\n    const listPDA = await this.account.list.pda(owner, namespace);\n    return this.program.instruction.createList(listPDA.bump, {\n      accounts: {\n        list: listPDA.address,\n        namespace: namespace,\n        owner: owner,\n        payer: payer,\n        systemProgram: SystemProgram.programId,\n      },\n    });\n  }\n}\n","import { Program } from \"@project-serum/anchor\";\nimport { PublicKey, TransactionInstruction } from \"@solana/web3.js\";\nimport { ListProgram } from \"../idl\";\nimport { Account } from \"../account\";\n\nexport type DeleteListArgs = {\n  list: PublicKey;\n};\n\nexport class DeleteList {\n  private account: Account;\n  private program: Program<ListProgram>;\n\n  constructor(account: Account, program: Program<ListProgram>) {\n    this.account = account;\n    this.program = program;\n  }\n\n  public async deleteList({\n    list,\n  }: DeleteListArgs): Promise<TransactionInstruction> {\n    const listData = await this.account.list.data(list);\n    return this.program.instruction.deleteList({\n      accounts: {\n        list: list,\n        owner: listData.owner,\n      },\n    });\n  }\n}\n","import { Program } from \"@project-serum/anchor\";\nimport {\n  PublicKey,\n  SystemProgram,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport { ListProgram } from \"../idl\";\nimport { Account } from \"../account\";\n\nexport type PushElementArgs = {\n  list: PublicKey;\n  owner: PublicKey;\n  value: PublicKey;\n};\n\nexport class PushElement {\n  private account: Account;\n  private program: Program<ListProgram>;\n\n  constructor(account: Account, program: Program<ListProgram>) {\n    this.account = account;\n    this.program = program;\n  }\n\n  public async pushElement({\n    list,\n    owner,\n    value,\n  }: PushElementArgs): Promise<TransactionInstruction> {\n    const listData = await this.account.list.data(list);\n    const elementPDA = await this.account.element.pda(list, listData.count);\n    return this.program.instruction.pushElement(value, elementPDA.bump, {\n      accounts: {\n        list: list,\n        element: elementPDA.address,\n        owner: owner,\n        payer: owner,\n        systemProgram: SystemProgram.programId,\n      },\n    });\n  }\n}\n","import { BN, Program } from \"@project-serum/anchor\";\nimport { PublicKey, TransactionInstruction } from \"@solana/web3.js\";\nimport { ListProgram } from \"../idl\";\nimport { Account } from \"../account\";\n\nexport type PopElementArgs = {\n  list: PublicKey;\n};\n\nexport class PopElement {\n  private account: Account;\n  private program: Program<ListProgram>;\n\n  constructor(account: Account, program: Program<ListProgram>) {\n    this.account = account;\n    this.program = program;\n  }\n\n  public async popElement({\n    list,\n  }: PopElementArgs): Promise<TransactionInstruction> {\n    const listData = await this.account.list.data(list);\n    const elementPDA = await this.account.element.pda(\n      list,\n      listData.count.sub(new BN(1))\n    );\n    return this.program.instruction.popElement({\n      accounts: {\n        list: list,\n        element: elementPDA.address,\n        owner: listData.owner,\n      },\n    });\n  }\n}\n","import { Program } from \"@project-serum/anchor\";\nimport { TransactionInstruction } from \"@solana/web3.js\";\nimport { ListProgram } from \"../idl\";\nimport { Account } from \"../account\";\n\nimport { CreateList, CreateListArgs } from \"./createList\";\nimport { DeleteList, DeleteListArgs } from \"./deleteList\";\nimport { PushElement, PushElementArgs } from \"./pushElement\";\nimport { PopElement, PopElementArgs } from \"./popElement\";\n\nexport class Instruction {\n  private account: Account;\n  private program: Program<ListProgram>;\n\n  public createList: (args: CreateListArgs) => Promise<TransactionInstruction>;\n\n  public deleteList: (args: DeleteListArgs) => Promise<TransactionInstruction>;\n\n  public pushElement: (\n    args: PushElementArgs\n  ) => Promise<TransactionInstruction>;\n\n  public popElement: (args: PopElementArgs) => Promise<TransactionInstruction>;\n\n  constructor(account: Account, program: Program<ListProgram>) {\n    this.account = account;\n    this.program = program;\n\n    this.createList = new CreateList(account, program).createList;\n    this.deleteList = new DeleteList(account, program).deleteList;\n    this.popElement = new PopElement(account, program).popElement;\n    this.pushElement = new PushElement(account, program).pushElement;\n  }\n}\n","export type ListProgram = {\n  \"version\": \"0.0.3\",\n  \"name\": \"list_program\",\n  \"instructions\": [\n    {\n      \"name\": \"createList\",\n      \"accounts\": [\n        {\n          \"name\": \"list\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"namespace\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"payer\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"bump\",\n          \"type\": \"u8\"\n        }\n      ]\n    },\n    {\n      \"name\": \"deleteList\",\n      \"accounts\": [\n        {\n          \"name\": \"list\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"isMut\": true,\n          \"isSigner\": true\n        }\n      ],\n      \"args\": []\n    },\n    {\n      \"name\": \"popElement\",\n      \"accounts\": [\n        {\n          \"name\": \"list\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"element\",\n          \"isMut\": true,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": []\n    },\n    {\n      \"name\": \"pushElement\",\n      \"accounts\": [\n        {\n          \"name\": \"list\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"payer\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"element\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"value\",\n          \"type\": \"publicKey\"\n        },\n        {\n          \"name\": \"bump\",\n          \"type\": \"u8\"\n        }\n      ]\n    }\n  ],\n  \"accounts\": [\n    {\n      \"name\": \"element\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"index\",\n            \"type\": \"u128\"\n          },\n          {\n            \"name\": \"value\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"bump\",\n            \"type\": \"u8\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"list\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"owner\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"namespace\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"count\",\n            \"type\": \"u128\"\n          },\n          {\n            \"name\": \"bump\",\n            \"type\": \"u8\"\n          }\n        ]\n      }\n    }\n  ]\n};\n\nexport const IDL: ListProgram = {\n  \"version\": \"0.0.3\",\n  \"name\": \"list_program\",\n  \"instructions\": [\n    {\n      \"name\": \"createList\",\n      \"accounts\": [\n        {\n          \"name\": \"list\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"namespace\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"payer\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"bump\",\n          \"type\": \"u8\"\n        }\n      ]\n    },\n    {\n      \"name\": \"deleteList\",\n      \"accounts\": [\n        {\n          \"name\": \"list\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"isMut\": true,\n          \"isSigner\": true\n        }\n      ],\n      \"args\": []\n    },\n    {\n      \"name\": \"popElement\",\n      \"accounts\": [\n        {\n          \"name\": \"list\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"element\",\n          \"isMut\": true,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": []\n    },\n    {\n      \"name\": \"pushElement\",\n      \"accounts\": [\n        {\n          \"name\": \"list\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"payer\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"element\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"value\",\n          \"type\": \"publicKey\"\n        },\n        {\n          \"name\": \"bump\",\n          \"type\": \"u8\"\n        }\n      ]\n    }\n  ],\n  \"accounts\": [\n    {\n      \"name\": \"element\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"index\",\n            \"type\": \"u128\"\n          },\n          {\n            \"name\": \"value\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"bump\",\n            \"type\": \"u8\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"list\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"owner\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"namespace\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"count\",\n            \"type\": \"u128\"\n          },\n          {\n            \"name\": \"bump\",\n            \"type\": \"u8\"\n          }\n        ]\n      }\n    }\n  ]\n};\n","import { Program, Provider } from \"@project-serum/anchor\";\nimport { Account } from \"./account\";\nimport { Instruction } from \"./instruction\";\nimport { IDL, ListProgram as _ListProgram } from \"./idl\";\n\nexport const PROGRAM_ID = \"DBMi4GBjiX15vCMVj93uB7JYM9LU6rCaZJraVKM6XgZi\";\n\nexport class ListProgram {\n  static programId = PROGRAM_ID;\n\n  public account: Account;\n  public instruction: Instruction;\n\n  constructor(provider: Provider) {\n    const program = new Program(IDL, PROGRAM_ID, provider);\n    const account = new Account(program);\n    const instruction = new Instruction(account, program);\n    this.account = account;\n    this.instruction = instruction;\n  }\n}\n\nexport * from \"./types\";\n"],"names":["SEED_LIST","Buffer","from","ListGateway","pda","owner","namespace","findPDA","toBuffer","this","program","programId","Gateway","SEED_ELEMENT","ElementGateway","index","position","toArrayLike","Account","element","list","account","CreateList","createList","payer","_this2","listPDA","instruction","bump","accounts","address","systemProgram","SystemProgram","DeleteList","deleteList","data","listData","PushElement","pushElement","value","count","elementPDA","PopElement","popElement","sub","BN","Instruction","IDL","version","name","instructions","isMut","isSigner","args","type","kind","fields","PROGRAM_ID","ListProgram","provider","Program"],"mappings":"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"}